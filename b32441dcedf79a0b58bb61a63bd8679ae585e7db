{
  "comments": [
    {
      "key": {
        "uuid": "a4851ec6_8d2ecd6b",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 22,
      "author": {
        "id": 872
      },
      "writtenOn": "2020-11-02T14:31:20Z",
      "side": 1,
      "message": "It looks like you have to create a separate fixture for vnc_api and use it then everywhere in the tests",
      "range": {
        "startLine": 22,
        "startChar": 8,
        "endLine": 22,
        "endChar": 60
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b03b94f4_3dcc3c5f",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 22,
      "author": {
        "id": 991
      },
      "writtenOn": "2020-11-02T20:45:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4851ec6_8d2ecd6b",
      "range": {
        "startLine": 22,
        "startChar": 8,
        "endLine": 22,
        "endChar": 60
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1cdbdf1_0fac4619",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 37,
      "author": {
        "id": 872
      },
      "writtenOn": "2020-11-02T14:31:20Z",
      "side": 1,
      "message": "wrap vnc api into fixture",
      "range": {
        "startLine": 36,
        "startChar": 8,
        "endLine": 37,
        "endChar": 68
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2169683_a3619683",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 37,
      "author": {
        "id": 991
      },
      "writtenOn": "2020-11-02T20:45:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c1cdbdf1_0fac4619",
      "range": {
        "startLine": 36,
        "startChar": 8,
        "endLine": 37,
        "endChar": 68
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eaba4701_b3dab2b7",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 43,
      "author": {
        "id": 872
      },
      "writtenOn": "2020-11-02T14:31:20Z",
      "side": 1,
      "message": "this looks like common method not specific for apply_defaults only - you can put it into the base class.",
      "range": {
        "startLine": 43,
        "startChar": 8,
        "endLine": 43,
        "endChar": 34
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "923b06b6_51066f91",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 43,
      "author": {
        "id": 991
      },
      "writtenOn": "2020-11-02T21:14:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eaba4701_b3dab2b7",
      "range": {
        "startLine": 43,
        "startChar": 8,
        "endLine": 43,
        "endChar": 34
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0a2a277_4a40b0c6",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 59,
      "author": {
        "id": 872
      },
      "writtenOn": "2020-11-02T14:31:20Z",
      "side": 1,
      "message": "it looks like common method - not specific for apply_defaults only. Think about move it to base class",
      "range": {
        "startLine": 59,
        "startChar": 8,
        "endLine": 59,
        "endChar": 56
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7d63cc6_400e3f12",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 59,
      "author": {
        "id": 991
      },
      "writtenOn": "2020-11-02T21:14:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0a2a277_4a40b0c6",
      "range": {
        "startLine": 59,
        "startChar": 8,
        "endLine": 59,
        "endChar": 56
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4abf3d3b_2550692f",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 64,
      "author": {
        "id": 872
      },
      "writtenOn": "2020-11-02T14:31:20Z",
      "side": 1,
      "message": "use ssh fixture",
      "range": {
        "startLine": 64,
        "startChar": 17,
        "endLine": 64,
        "endChar": 36
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "628a968c_e26153b1",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 67,
      "author": {
        "id": 872
      },
      "writtenOn": "2020-11-02T14:31:20Z",
      "side": 1,
      "message": "this is have to be fixture method",
      "range": {
        "startLine": 67,
        "startChar": 37,
        "endLine": 67,
        "endChar": 61
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92d849a6_b62c3da4",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 84,
      "author": {
        "id": 872
      },
      "writtenOn": "2020-11-02T14:31:20Z",
      "side": 1,
      "message": "it looks like you want to create your own testtools. Why don\u0027t use testtools Assertions? https://testtools.readthedocs.io/en/latest/for-test-authors.html#assertions",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 84,
        "endChar": 43
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53735fe3_e0b9ddda",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 84,
      "author": {
        "id": 991
      },
      "writtenOn": "2020-11-02T21:14:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "92d849a6_b62c3da4",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 84,
        "endChar": 43
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef8871e2_ca999efe",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 91,
      "author": {
        "id": 872
      },
      "writtenOn": "2020-11-02T14:31:20Z",
      "side": 1,
      "message": "It not clear. Please use testtools assertions for readability of your code. It\u0027s not need to invent the new way of testing here. You can use tf-test for reference: https://github.com/tungstenfabric/tf-test/tree/master/scripts",
      "range": {
        "startLine": 91,
        "startChar": 13,
        "endLine": 91,
        "endChar": 29
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6e3ded4_3c964960",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 91,
      "author": {
        "id": 991
      },
      "writtenOn": "2020-11-02T21:14:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ef8871e2_ca999efe",
      "range": {
        "startLine": 91,
        "startChar": 13,
        "endLine": 91,
        "endChar": 29
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86dda494_98c285aa",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 105,
      "author": {
        "id": 872
      },
      "writtenOn": "2020-11-02T14:31:20Z",
      "side": 1,
      "message": "It doesn\u0027t look like you need to separate all this logic to separate functions. If you write it in one test method it be more readable.",
      "range": {
        "startLine": 86,
        "startChar": 8,
        "endLine": 105,
        "endChar": 81
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c30d9934_daf23621",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 105,
      "author": {
        "id": 991
      },
      "writtenOn": "2020-11-02T21:14:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "86dda494_98c285aa",
      "range": {
        "startLine": 86,
        "startChar": 8,
        "endLine": 105,
        "endChar": 81
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0502a871_7025ce52",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 109,
      "author": {
        "id": 437
      },
      "writtenOn": "2020-11-02T12:27:02Z",
      "side": 1,
      "message": "imho: such logs are just part of that test workflow.. \nin my opinion such  functions are useless because they are only for one particular case and cannot be reused anywhere else\n\nIn general, I doubt you need separate class.. helping methods might be members of that main class with names like \"def _some_name..\"  that underline that they are kind of private members",
      "range": {
        "startLine": 108,
        "startChar": 0,
        "endLine": 109,
        "endChar": 73
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db235992_c8080763",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 109,
      "author": {
        "id": 991
      },
      "writtenOn": "2020-11-02T21:14:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0502a871_7025ce52",
      "range": {
        "startLine": 108,
        "startChar": 0,
        "endLine": 109,
        "endChar": 73
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c528c51c_2c1edd72",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 117,
      "author": {
        "id": 872
      },
      "writtenOn": "2020-11-02T14:31:20Z",
      "side": 1,
      "message": "1. it looks like not specific for apply_defaults - move to to baseclass.\n2. Why don\u0027t you use os.system here?",
      "range": {
        "startLine": 114,
        "startChar": 3,
        "endLine": 117,
        "endChar": 3
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b7fc088_83012c06",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 117,
      "author": {
        "id": 991
      },
      "writtenOn": "2020-11-02T21:14:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c528c51c_2c1edd72",
      "range": {
        "startLine": 114,
        "startChar": 3,
        "endLine": 117,
        "endChar": 3
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd7b6ea6_789506cd",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 154,
      "author": {
        "id": 872
      },
      "writtenOn": "2020-11-02T14:31:20Z",
      "side": 1,
      "message": "move it in separate fixture and use ssh calls like fixture usage",
      "range": {
        "startLine": 154,
        "startChar": 8,
        "endLine": 154,
        "endChar": 19
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16ee6ad4_ffb513ac",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 154,
      "author": {
        "id": 991
      },
      "writtenOn": "2020-11-02T21:14:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd7b6ea6_789506cd",
      "range": {
        "startLine": 154,
        "startChar": 8,
        "endLine": 154,
        "endChar": 19
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee48fbc7_df8e9eb4",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 168,
      "author": {
        "id": 872
      },
      "writtenOn": "2020-11-02T14:31:20Z",
      "side": 1,
      "message": "move it to fixture. It\u0027s not test specific functional",
      "range": {
        "startLine": 168,
        "startChar": 8,
        "endLine": 168,
        "endChar": 32
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb0c4532_05731c13",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 168,
      "author": {
        "id": 991
      },
      "writtenOn": "2020-11-02T21:14:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ee48fbc7_df8e9eb4",
      "range": {
        "startLine": 168,
        "startChar": 8,
        "endLine": 168,
        "endChar": 32
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98ebc056_d875f3ec",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 189,
      "author": {
        "id": 872
      },
      "writtenOn": "2020-11-02T14:31:20Z",
      "side": 1,
      "message": "to fixture",
      "range": {
        "startLine": 189,
        "startChar": 8,
        "endLine": 189,
        "endChar": 27
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ee696c9_ebc1515d",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 189,
      "author": {
        "id": 991
      },
      "writtenOn": "2020-11-02T21:14:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "98ebc056_d875f3ec",
      "range": {
        "startLine": 189,
        "startChar": 8,
        "endLine": 189,
        "endChar": 27
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3858f8f0_e28b80f1",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 213,
      "author": {
        "id": 872
      },
      "writtenOn": "2020-11-02T14:31:20Z",
      "side": 1,
      "message": "remove this. Use self.logger.info() or similar calls",
      "range": {
        "startLine": 213,
        "startChar": 8,
        "endLine": 213,
        "endChar": 18
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7202534a_d31ffc9b",
        "filename": "my_helpers/apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 213,
      "author": {
        "id": 991
      },
      "writtenOn": "2020-11-02T21:14:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3858f8f0_e28b80f1",
      "range": {
        "startLine": 213,
        "startChar": 8,
        "endLine": 213,
        "endChar": 18
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb0aebac_39cd9d5a",
        "filename": "scripts/test_apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 14,
      "author": {
        "id": 437
      },
      "writtenOn": "2020-11-02T12:27:02Z",
      "side": 1,
      "message": "this test for now looks orchestrator independed.. \ndef test_apply_defaults(self)\nNot clear what to put to attr, Ivan?",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 14,
        "endChar": 30
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78736d57_d74a7e56",
        "filename": "scripts/test_apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 14,
      "author": {
        "id": 872
      },
      "writtenOn": "2020-11-02T14:07:05Z",
      "side": 1,
      "message": "1. Dmitry, it looks like you have to use more meaningfull test name. i.e. test_apply_defaults as Alexey suggests. \n2. Now test suite supports only orchestrator/deployer dependent tests run. For support orchestrator independent tests needs implement this on test suite level. i.e. add new attr like \"all_orchestrators\" and call it when testr starts.",
      "parentUuid": "cb0aebac_39cd9d5a",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 14,
        "endChar": 30
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cc14f5f_7a6bec82",
        "filename": "scripts/test_apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 20,
      "author": {
        "id": 437
      },
      "writtenOn": "2020-11-02T12:27:02Z",
      "side": 1,
      "message": "not clear why it is needed",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 20,
        "endChar": 40
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da4ebabf_9e2677db",
        "filename": "scripts/test_apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 20,
      "author": {
        "id": 872
      },
      "writtenOn": "2020-11-02T14:07:05Z",
      "side": 1,
      "message": "1. Incorrect logging use.\nself.logger \u003d logging.getLogger(__name__ + \u0027.ansible_k8s_smoke\u0027)\nself.logger.info(\u0027Bla bla bla\u0027)\nor\nself.logger.debug(), self.logger.error()\n\n2. self.host_fixture._client.close() - remove this. Create your own fisture for your own purpose as we discussed in skype",
      "parentUuid": "5cc14f5f_7a6bec82",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 20,
        "endChar": 40
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33d284e8_744a2e0c",
        "filename": "scripts/test_apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 39,
      "author": {
        "id": 437
      },
      "writtenOn": "2020-11-02T12:27:02Z",
      "side": 1,
      "message": "could we convert to bool and return boolean type from function, not needed in python compare bool like strings..",
      "range": {
        "startLine": 39,
        "startChar": 11,
        "endLine": 39,
        "endChar": 35
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03837fde_567d883e",
        "filename": "scripts/test_apply_defaults.py",
        "patchSetId": 21
      },
      "lineNbr": 39,
      "author": {
        "id": 991
      },
      "writtenOn": "2020-11-02T21:21:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33d284e8_744a2e0c",
      "range": {
        "startLine": 39,
        "startChar": 11,
        "endLine": 39,
        "endChar": 35
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "498c81a6_a3c7986d",
        "filename": "testrunner.sh",
        "patchSetId": 21
      },
      "lineNbr": 9,
      "author": {
        "id": 872
      },
      "writtenOn": "2020-11-02T14:37:22Z",
      "side": 1,
      "message": "tf-deployment-test ??",
      "range": {
        "startLine": 9,
        "startChar": 11,
        "endLine": 9,
        "endChar": 35
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2900bca_c4f05a27",
        "filename": "testrunner.sh",
        "patchSetId": 21
      },
      "lineNbr": 9,
      "author": {
        "id": 991
      },
      "writtenOn": "2020-11-02T21:21:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "498c81a6_a3c7986d",
      "range": {
        "startLine": 9,
        "startChar": 11,
        "endLine": 9,
        "endChar": 35
      },
      "revId": "b32441dcedf79a0b58bb61a63bd8679ae585e7db",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    }
  ]
}